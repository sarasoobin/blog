
---
layout: post
title:  "ECC 개발블로그 2일차"
date:   2025-03-29 19:04:29 +0900
categories: ECC
---

# Chapter03 연산자
## 03-1 연산자와 연산식
- 연산자: 연산의 종류를 결정짓는 기호. 연산자의 종류는 산술(+.-.*,/,%), 증감(++,--), 비교(==,!=),논리(&&,||), 대입(=,+=,-=) 등이 있습니다

**연산의 방향과 우선순위**
1. 단항, 이항, 삼항 연산자 순으로 우선순위를 가진다
2. 산술, 비교, 논리, 대입 연산자 순으로 우선순위를 가진다
3. 단항, 부호, 대입 연산자를 제외한 모든 연산의 방향은 왼쪽에서 오른쪽

## 03-2 연산자의 종류

### **부호연산자(+,-)**
- 양수 및 음수를 표시하는 +,-를 말한다

*주의할 점:* 부호 연산자(+,-)의 결과가 int타입이다.

잘못된 코딩
```java
byte b=100;
byte result=-b;
```

올바른 코드:
```java
byte b = 100;
int result = -b;
```

```java
package sec02.exam01;
public class SignOperatorExample {
    public static void main(String[] args) {
        int x = -100;
        int result1 = +x;
        int result2 = -x;
        System.out.println("result1=" + result1);
        System.out.println("result2=" + result2);

        byte b = 100;
        int result3 = -b; 
        System.out.println("result3=" + result3);
    }
}
```

### **증감연산자(++,--)**
- 증감 연산자가 변수 앞에 있으면 먼저 연산, 뒤에 있으면 나중 연산

```java
package sec02.exam02;
public class IncreaseDecreaseOperatorExample {
    public static void main(String[] args) {
        int x = 10;
        int y = 10;
        int z;

        x++;
        ++x;
        y--;
        --y;
        z = x++;
        z = ++x;
        z = ++x + y++;
    }
}
```

1. `z = ++x + y++;`는 아래와 동일
```java
++x;
z = x + y;
y++;
```

### **논리 부정 연산자(!)**
```java
package sec02.exam03;
public class DenyLogicOperatorExample {
    public static void main(String[] args) {
        boolean play = true;
        System.out.println(play);
        play = !play;
        System.out.println(play);
        play = !play;
        System.out.println(play);
    }
}
```

| 실행결과 |
|----------|
| true     |
| false    |
| true     |

### **산술 연산자(+,-,*,/,%)**
- 타입 변환 규칙:
  1. byte, short, char → int
  2. long 포함 시 → long
  3. 실수 포함 시 → 더 큰 실수 타입

```java
package sec02.exam04;

public class ArithmeticOperatorExample {
    public static void main(String[] args) {
        int v1 = 5;
        int v2 = 2;
        double result6 = (double) v1 / v2;
    }
}
```

- char 연산 시 주의: 결과는 int
```java
package sec02.exam05;
public class CharOperationExample {
    public static void main(String[] args) {
        char c1 = 'A' + 1;
        char c2 = 'A';
        System.out.println("c1: " + c1);
        System.out.println("c2: " + c2);
    }
}
```

### **문자열 결합 연산자(+)**
```java
package sec02.exam06;
public class StringConcatExample {
    public static void main(String[] args) {
        String str1 = "JDK" + 6.0;
        String str2 = str1 + " 특징";
        String str3 = "JDK" + 3 + 3.0;
        String str4 = 3 + 3.0 + "JDK";
    }
}
```

| 실행결과 |
|----------|
| JDK6.0 특징 |
| JDK33.0 |
| 6.0JDK |

---

## Chapter 05 참조타입

### 자바의 타입

| 기본 타입 |         | 참조 타입   |
|-----------|---------|-------------|
| 정수 타입 |         | 배열 타입   |
| 실수 타입 |         | 열거 타입   |
| 논리 타입 |         | 클래스      |
|           |         | 인터페이스  |

...

(전체 글이 길어 생략됨 — 필요하면 전체 글 포함해서 저장 가능)
